{"version":3,"sources":["util.js","App.js","reportWebVitals.js","index.js"],"names":["TicTacToe","N","this","board","i","row","push","rows","Array","fill","cols","mainDiag","offDiag","prototype","availableMoves","j","col","isValidMove","play","player","evaluate","isTerminal","player1","some","val","player2","length","toString","str","join","getBoardState","JSON","parse","stringify","setBoardState","state","cache","Map","minimax","has","get","score","moves","bestEval","bestMove","out","move","set","tictactoe","App","useState","setBoard","winner","setWinner","highlight","setHighlight","tmpBoard","getWinner","nextBestMove","id","copy","getNextBestMove","highlightWinningCells","numFilled","plusOrMinus","console","log","findIndex","getHighlightStyle","substring","Number","charAt","className","map","cell","style","backgroundColor","color","onClick","window","location","reload","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sMAAMA,EAAY,SAASC,GACvBC,KAAKD,EAAIA,EACTC,KAAKC,MAAQ,GACb,IAAK,IAAIC,EAAI,EAAGA,EAAIF,KAAKD,EAAGG,IAAK,CAE7B,IADA,IAAMC,EAAM,GACHD,EAAI,EAAGA,EAAIF,KAAKD,EAAGG,IACxBC,EAAIC,KAAK,KAEbJ,KAAKC,MAAMG,KAAKD,GAEpBH,KAAKK,KAAO,CAAE,QAAWC,MAAMN,KAAKD,GAAGQ,KAAK,GAAI,QAAWD,MAAMN,KAAKD,GAAGQ,KAAK,IAC9EP,KAAKQ,KAAO,CAAE,QAAWF,MAAMN,KAAKD,GAAGQ,KAAK,GAAI,QAAWD,MAAMN,KAAKD,GAAGQ,KAAK,IAC9EP,KAAKS,SAAW,CAAE,QAAW,EAAG,QAAW,GAC3CT,KAAKU,QAAU,CAAE,QAAW,EAAG,QAAW,IAG9CZ,EAAUa,UAAUC,eAAiB,WAEjC,IADA,IAAMA,EAAiB,GACdV,EAAI,EAAGA,EAAIF,KAAKD,EAAGG,IACxB,IAAK,IAAIW,EAAI,EAAGA,EAAIb,KAAKD,EAAGc,IACC,MAArBb,KAAKC,MAAMC,GAAGW,IACdD,EAAeR,KAAK,CAAED,IAAKD,EAAGY,IAAKD,IAI/C,OAAOD,GAGXd,EAAUa,UAAUI,YAAc,SAASZ,EAAKW,GAC5C,MAA6B,MAAzBd,KAAKC,MAAME,GAAKW,IAMxBhB,EAAUa,UAAUK,KAAO,SAASb,EAAKW,EAAKG,GAC1CjB,KAAKC,MAAME,GAAKW,GAAOG,EACvBjB,KAAKK,KAAL,gBAAmBY,IAAUd,IAAQ,EACrCH,KAAKQ,KAAL,gBAAmBS,IAAUH,IAAQ,EACjCX,IAAQW,IACRd,KAAKS,SAAL,gBAAuBQ,KAAa,GAEpCd,IAASH,KAAKD,EAAI,EAAIe,IACtBd,KAAKU,QAAL,gBAAsBO,KAAa,IAI3CnB,EAAUa,UAAUO,SAAW,WAAY,IAAD,OACtC,OAAIlB,KAAKmB,aAEDnB,KAAKK,KAAKe,QAAQC,MAAK,SAAAC,GAAG,OAAIA,IAAQ,EAAKvB,MAC3CC,KAAKQ,KAAKY,QAAQC,MAAK,SAAAC,GAAG,OAAIA,IAAQ,EAAKvB,MAC3CC,KAAKS,SAASW,UAAYpB,KAAKD,GAC/BC,KAAKU,QAAQU,UAAYpB,KAAKD,EAEvB,EAEPC,KAAKK,KAAKkB,QAAQF,MAAK,SAAAC,GAAG,OAAIA,IAAQ,EAAKvB,MAC3CC,KAAKQ,KAAKe,QAAQF,MAAK,SAAAC,GAAG,OAAIA,IAAQ,EAAKvB,MAC3CC,KAAKS,SAASc,UAAYvB,KAAKD,GAC/BC,KAAKU,QAAQa,UAAYvB,KAAKD,GAEtB,EAED,EAGJ,MAIfD,EAAUa,UAAUQ,WAAa,WAAY,IAAD,OACxC,OACInB,KAAKK,KAAKe,QAAQC,MAAK,SAAAC,GAAG,OAAIA,IAAQ,EAAKvB,MAC3CC,KAAKQ,KAAKY,QAAQC,MAAK,SAAAC,GAAG,OAAIA,IAAQ,EAAKvB,MAC3CC,KAAKS,SAASW,UAAYpB,KAAKD,GAC/BC,KAAKU,QAAQU,UAAYpB,KAAKD,GAC9BC,KAAKK,KAAKkB,QAAQF,MAAK,SAAAC,GAAG,OAAIA,IAAQ,EAAKvB,MAC3CC,KAAKQ,KAAKe,QAAQF,MAAK,SAAAC,GAAG,OAAIA,IAAQ,EAAKvB,MAC3CC,KAAKS,SAASc,UAAYvB,KAAKD,GAC/BC,KAAKU,QAAQa,UAAYvB,KAAKD,GACG,IAAjCC,KAAKY,iBAAiBY,QAI9B1B,EAAUa,UAAUc,SAAW,WAE3B,IADA,IAAIC,EAAM,GACDxB,EAAI,EAAGA,EAAIF,KAAKD,EAAGG,IACxBwB,GAAO1B,KAAKC,MAAMC,GAAGyB,KAAK,OACtBzB,IAAMF,KAAKD,EAAI,IACf2B,GAAO,MAGf,OAAOA,GAGX5B,EAAUa,UAAUiB,cAAgB,WAChC,OAAOC,KAAKC,MAAMD,KAAKE,UAAU/B,QAGrCF,EAAUa,UAAUqB,cAAgB,SAASC,GACzCjC,KAAKD,EAAIkC,EAAMlC,EACfC,KAAKC,MAAQgC,EAAMhC,MACnBD,KAAKK,KAAO4B,EAAM5B,KAClBL,KAAKQ,KAAOyB,EAAMzB,KAClBR,KAAKS,SAAWwB,EAAMxB,SACtBT,KAAKU,QAAUuB,EAAMvB,SAGzB,IAAMwB,EAAQ,IAAIC,IAElBrC,EAAUa,UAAUyB,QAAU,SAASnB,GACnC,GAAIiB,EAAMG,IAAN,UAAapB,EAAb,aAAwBjB,KAAKyB,aAC7B,OAAOS,EAAMI,IAAN,UAAarB,EAAb,aAAwBjB,KAAKyB,aAGxC,GAAIzB,KAAKmB,aAEL,MAAO,CAAEoB,MADKvC,KAAKkB,YAKvB,IADA,IAAMsB,EAAQxC,KAAKY,iBACVV,EAAI,EAAGA,EAAIsC,EAAMhB,OAAQtB,IAAK,CACnC,IAAM+B,EAAQjC,KAAK4B,gBAEnB,EAAqBY,EAAMtC,GAAnBC,EAAR,EAAQA,IAAKW,EAAb,EAAaA,IACbd,KAAKgB,KAAKb,EAAKW,EAAKG,GACpB,IAAQsB,EAAUvC,KAAKoC,QAAmB,IAAXnB,EAAe,EAAI,GAA1CsB,MACRC,EAAMtC,GAAGqC,MAAQA,EAEjBvC,KAAKgC,cAAcC,GAKvB,IAFA,IAAIQ,EAAWD,EAAM,GAAGD,MACpBG,EAAWF,EAAM,GACZtC,EAAI,EAAGA,EAAIsC,EAAMhB,OAAQtB,IAAK,CACnC,IAAQqC,EAAUC,EAAMtC,GAAhBqC,MACO,IAAXtB,EACIsB,EAAQE,IACRA,EAAWF,EACXG,EAAWF,EAAMtC,IAGjBqC,EAAQE,IACRA,EAAWF,EACXG,EAAWF,EAAMtC,IAK7B,IAAMyC,EAAM,CAAEC,KAAM,CAAEzC,IAAKuC,EAASvC,IAAKW,IAAK4B,EAAS5B,KAAOyB,MAAOE,GAErE,OADAP,EAAMW,IAAN,UAAa5B,EAAb,aAAwBjB,KAAKyB,YAAckB,GACpCA,GAGX,IAAMG,EAAY,IAAIhD,EAAU,G,eCAjBiD,MAvJf,WACE,MAA0BC,mBAAS,CAAC,CAAC,IAAK,IAAK,KAAM,CAAC,IAAK,IAAK,KAAM,CAAC,IAAK,IAAK,OAAjF,mBAAO/C,EAAP,KAAcgD,EAAd,KACA,EAA4BD,mBAAS,MAArC,mBAAOE,EAAP,KAAeC,EAAf,KACA,EAAkCH,mBAAS,IAA3C,mBAAOI,EAAP,KAAkBC,EAAlB,KAEMrC,EAAO,SAACb,EAAKW,GACjB,GAAwB,MAApBb,EAAME,GAAKW,IAA2B,OAAXoC,EAAiB,CAE9C,IADA,IAAMI,EAAW,GACRpD,EAAI,EAAGA,EAAID,EAAMuB,OAAQtB,IAChCoD,EAASlD,KAAT,YAAkBH,EAAMC,KAE1BoD,EAASnD,GAAKW,GAAO,EAErB,IAAIoC,EAASK,EAAUD,GACvB,GAAe,OAAXJ,EACFD,EAASK,GACTH,EAAUD,OACL,CACL,IAAMM,EDuIiB,SAACF,GAK5B,IAJA,IAAIjD,EAAO,CAAE,QAAWC,MAAM,GAAGC,KAAK,GAAI,QAAWD,MAAM,GAAGC,KAAK,IAC/DC,EAAO,CAAE,QAAWF,MAAM,GAAGC,KAAK,GAAI,QAAWD,MAAM,GAAGC,KAAK,IAC/DE,EAAW,CAAE,QAAW,EAAG,QAAW,GACtCC,EAAS,CAAE,QAAW,EAAG,QAAW,GAC/BR,EAAI,EAAGA,EAAI,EAAGA,IACnB,IAAK,IAAIW,EAAI,EAAGA,EAAI,EAAGA,IACnB,GAAuB,MAAnByC,EAASpD,GAAGW,GAAY,CACxB,IAAM4C,EAAKH,EAASpD,GAAGW,GACvBR,EAAK,SAAD,OAAUoD,IAAMvD,IAAM,EAC1BM,EAAK,SAAD,OAAUiD,IAAM5C,IAAM,EACtBX,IAAMW,IAAGJ,EAAS,SAAD,OAAUgD,KAAS,GACpCvD,IAAM,EAAIW,IAAGH,EAAQ,SAAD,OAAU+C,KAAS,GAKvD,IADA,IAAMC,EAAO,GACJxD,EAAI,EAAGA,EAAI,EAAGA,IACnBwD,EAAKtD,KAAL,YAAckD,EAASpD,KAE3B4C,EAAUd,cAAc,CACpBjC,EAAG,EACHE,MAAOyD,EACPrD,OACAG,OACAC,WACAC,YAEJ,MAA+BoC,EAAUV,QAAQ,GAAzCQ,KACR,MAAO,CAAEzC,IADT,EAAgBA,IACFW,IADd,EAAqBA,KCnKI6C,CAAgBL,GACrCA,EAASE,EAAarD,KAAKqD,EAAa1C,KAAO,EAC/CmC,EAASK,GAGM,QADfJ,EAASK,EAAUD,MAEjBM,EAAsBN,GACtBH,EAAUD,OAOZK,EAAY,SAACtD,GAOjB,IANA,IAAII,EAAO,CAAC,EAAG,EAAG,GACdG,EAAO,CAAC,EAAG,EAAG,GACdC,EAAW,EACXC,EAAU,EACVmD,EAAY,EAEP3D,EAAI,EAAGA,EAAID,EAAMuB,OAAQtB,IAChC,IAAK,IAAIW,EAAI,EAAGA,EAAIZ,EAAM,GAAGuB,OAAQX,IACnC,GAAoB,MAAhBZ,EAAMC,GAAGW,GAAY,CACvBgD,GAAa,EACb,IAAMC,EAA8B,IAAhB7D,EAAMC,GAAGW,GAAW,GAAK,EAC7CR,EAAKH,IAAM4D,EACXtD,EAAKK,IAAMiD,EACP5D,IAAMW,IAAGJ,GAAYqD,GACrB5D,IAAO,EAAIW,IAAIH,GAAWoD,GAKpC,OACEzD,EAAKgB,MAAK,SAAAC,GAAG,OAAY,IAARA,MACjBd,EAAKa,MAAK,SAAAC,GAAG,OAAY,IAARA,MACJ,IAAbb,GACY,IAAZC,EAEO,EAEPL,EAAKgB,MAAK,SAAAC,GAAG,OAAa,IAATA,MACjBd,EAAKa,MAAK,SAAAC,GAAG,OAAa,IAATA,OACH,IAAdb,IACa,IAAbC,GAEQ,EACe,IAAdmD,EACF,EAEA,MAKLD,EAAwB,SAAC3D,GAC7B8D,QAAQC,IAAR,2BAMA,IALA,IAAI3D,EAAO,CAAC,EAAG,EAAG,GACdG,EAAO,CAAC,EAAG,EAAG,GACdC,EAAW,EACXC,EAAU,EAELR,EAAI,EAAGA,EAAID,EAAMuB,OAAQtB,IAChC,IAAK,IAAIW,EAAI,EAAGA,EAAIZ,EAAM,GAAGuB,OAAQX,IACnC,GAAoB,MAAhBZ,EAAMC,GAAGW,GAAY,CACvB,IAAMiD,EAA8B,IAAhB7D,EAAMC,GAAGW,GAAW,GAAK,EAC7CR,EAAKH,IAAM4D,EACXtD,EAAKK,IAAMiD,EACP5D,IAAMW,IAAGJ,GAAYqD,GACrB5D,IAAO,EAAIW,IAAIH,GAAWoD,GAKhCzD,EAAKgB,MAAK,SAAAC,GAAG,OAAa,IAATA,KACnB+B,EAAa,MAAD,OAAOhD,EAAK4D,WAAU,SAAA3C,GAAG,OAAa,IAATA,OAChCd,EAAKa,MAAK,SAAAC,GAAG,OAAa,IAATA,KAC1B+B,EAAa,MAAD,OAAO7C,EAAKyD,WAAU,SAAA3C,GAAG,OAAa,IAATA,QAClB,IAAdb,EACT4C,EAAa,aACS,IAAb3C,GACT2C,EAAa,YAIXa,EAAoB,SAAChE,EAAGW,GAC5B,MAAkC,QAA9BuC,EAAUe,UAAU,EAAG,GAClBjE,IAAMkE,OAAOhB,EAAUiB,OAAO,IACE,QAA9BjB,EAAUe,UAAU,EAAG,GACzBtD,IAAMuD,OAAOhB,EAAUiB,OAAO,IACd,aAAdjB,EACFlD,IAAMW,EACU,YAAduC,GACFlD,IAAO,EAAIW,GAMtB,OACE,sBAAKyD,UAAU,MAAf,UACE,6CACA,qBAAKA,UAAU,QAAf,SACE,gCACE,gCACGrE,EAAMsE,KAAI,SAACpE,EAAKD,GAAN,OACT,6BACCC,EAAIoE,KAAI,SAACC,EAAM3D,GAAP,OACP,oBACA4D,MAAO,CACLC,gBAA+B,KAAdtB,GAAoBc,EAAkBhE,EAAGW,GAAK,OAAS,KACxE8D,MAAqB,KAAdvB,GAAoBc,EAAkBhE,EAAGW,GAAK,QAAU,MAEjEyD,UAAU,OAAuBM,QAAS,WACxC5D,EAAKd,EAAGW,IANV,SAQY,IAAT2D,EAAa,IAAe,IAATA,EAAa,IAAM,KARzC,aAK4B3D,QAP9B,aAAeX,aAkBX,IAAXgD,GAAgB,2CACJ,IAAZA,GAAiB,2CACN,IAAXA,GAAgB,sCACL,OAAXA,GAAmB,wBAAQ0B,QAAS,kBAAMC,OAAOC,SAASC,UAAvC,4BC1IXC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.67800ca8.chunk.js","sourcesContent":["const TicTacToe = function(N) {\r\n    this.N = N\r\n    this.board = []\r\n    for (let i = 0; i < this.N; i++) {\r\n        const row = []\r\n        for (let i = 0; i < this.N; i++) {\r\n            row.push(' ')\r\n        }\r\n        this.board.push(row)\r\n    }\r\n    this.rows = { 'player1': Array(this.N).fill(0), 'player2': Array(this.N).fill(0) }\r\n    this.cols = { 'player1': Array(this.N).fill(0), 'player2': Array(this.N).fill(0) }\r\n    this.mainDiag = { 'player1': 0, 'player2': 0 }\r\n    this.offDiag = { 'player1': 0, 'player2': 0 }\r\n}\r\n\r\nTicTacToe.prototype.availableMoves = function() {\r\n    const availableMoves = []\r\n    for (let i = 0; i < this.N; i++) {\r\n        for (let j = 0; j < this.N; j++) {\r\n            if (this.board[i][j] === ' ') {\r\n                availableMoves.push({ row: i, col: j })\r\n            }\r\n        }\r\n    }\r\n    return availableMoves\r\n}\r\n\r\nTicTacToe.prototype.isValidMove = function(row ,col) {\r\n    if (this.board[row][col] !== ' ') {\r\n        return false\r\n    }\r\n    return true\r\n}\r\n\r\nTicTacToe.prototype.play = function(row, col, player) {\r\n    this.board[row][col] = player\r\n    this.rows[`player${player}`][row] += 1\r\n    this.cols[`player${player}`][col] += 1\r\n    if (row === col) {\r\n        this.mainDiag[`player${player}`] += 1\r\n    }\r\n    if (row === (this.N - 1 - col)) {\r\n        this.offDiag[`player${player}`] += 1\r\n    }\r\n}\r\n\r\nTicTacToe.prototype.evaluate = function() {\r\n    if (this.isTerminal()) {\r\n        if (\r\n            this.rows.player1.some(val => val === this.N) ||\r\n            this.cols.player1.some(val => val === this.N) ||\r\n            this.mainDiag.player1 === this.N ||\r\n            this.offDiag.player1 === this.N\r\n        ) {\r\n            return 1\r\n        } else if (\r\n            this.rows.player2.some(val => val === this.N) ||\r\n            this.cols.player2.some(val => val === this.N) ||\r\n            this.mainDiag.player2 === this.N ||\r\n            this.offDiag.player2 === this.N\r\n        ) {\r\n            return -1\r\n        } else {\r\n            return 0\r\n        }\r\n    } else {\r\n        return null\r\n    }\r\n}\r\n\r\nTicTacToe.prototype.isTerminal = function() {\r\n    return (\r\n        this.rows.player1.some(val => val === this.N) ||\r\n        this.cols.player1.some(val => val === this.N) ||\r\n        this.mainDiag.player1 === this.N ||\r\n        this.offDiag.player1 === this.N ||\r\n        this.rows.player2.some(val => val === this.N) ||\r\n        this.cols.player2.some(val => val === this.N) ||\r\n        this.mainDiag.player2 === this.N ||\r\n        this.offDiag.player2 === this.N ||\r\n        this.availableMoves().length === 0\r\n    )   \r\n}\r\n\r\nTicTacToe.prototype.toString = function() {\r\n    let str = ''\r\n    for (let i = 0; i < this.N; i++) {\r\n        str += this.board[i].join(' | ')\r\n        if (i !== this.N - 1) {\r\n            str += '\\n'\r\n        }\r\n    }\r\n    return str\r\n}\r\n\r\nTicTacToe.prototype.getBoardState = function() {\r\n    return JSON.parse(JSON.stringify(this))\r\n}\r\n\r\nTicTacToe.prototype.setBoardState = function(state) {\r\n    this.N = state.N\r\n    this.board = state.board\r\n    this.rows = state.rows\r\n    this.cols = state.cols\r\n    this.mainDiag = state.mainDiag\r\n    this.offDiag = state.offDiag\r\n}\r\n\r\nconst cache = new Map()\r\n\r\nTicTacToe.prototype.minimax = function(player) {\r\n    if (cache.has(`${player}->${this.toString()}`)) {\r\n        return cache.get(`${player}->${this.toString()}`)\r\n    }\r\n\r\n    if (this.isTerminal()) {\r\n        const score = this.evaluate()\r\n        return { score }\r\n    }\r\n\r\n    const moves = this.availableMoves()\r\n    for (let i = 0; i < moves.length; i++) {\r\n        const state = this.getBoardState()\r\n\r\n        const { row, col } = moves[i]\r\n        this.play(row, col, player)\r\n        const { score } = this.minimax(player === 1 ? 2 : 1)\r\n        moves[i].score = score\r\n\r\n        this.setBoardState(state)\r\n    }\r\n\r\n    let bestEval = moves[0].score\r\n    let bestMove = moves[0]\r\n    for (let i = 1; i < moves.length; i++) {\r\n        const { score } = moves[i]\r\n        if (player === 1) {\r\n            if (score > bestEval) {\r\n                bestEval = score\r\n                bestMove = moves[i]\r\n            }\r\n        } else {\r\n            if (score < bestEval) {\r\n                bestEval = score\r\n                bestMove = moves[i]\r\n            }\r\n        }\r\n    }\r\n\r\n    const out = { move: { row: bestMove.row, col: bestMove.col }, score: bestEval }\r\n    cache.set(`${player}->${this.toString()}`, out)\r\n    return out\r\n}\r\n\r\nconst tictactoe = new TicTacToe(3)\r\n\r\nexport const getNextBestMove = (tmpBoard) => {\r\n    let rows = { 'player1': Array(3).fill(0), 'player2': Array(3).fill(0) }\r\n    let cols = { 'player1': Array(3).fill(0), 'player2': Array(3).fill(0) }\r\n    let mainDiag = { 'player1': 0, 'player2': 0 }\r\n    let offDiag= { 'player1': 0, 'player2': 0 }\r\n    for (let i = 0; i < 3; i++) {\r\n        for (let j = 0; j < 3; j++) {\r\n            if (tmpBoard[i][j] !== ' ') {\r\n                const id = tmpBoard[i][j]\r\n                rows[`player${id}`][i] += 1\r\n                cols[`player${id}`][j] += 1\r\n                if (i === j) mainDiag[`player${id}`] += 1\r\n                if (i === 2 - j) offDiag[`player${id}`] += 1\r\n            }\r\n        }\r\n    }\r\n    const copy = []\r\n    for (let i = 0; i < 3; i++) {\r\n        copy.push([...tmpBoard[i]])\r\n    }\r\n    tictactoe.setBoardState({\r\n        N: 3,\r\n        board: copy,\r\n        rows,\r\n        cols,\r\n        mainDiag,\r\n        offDiag,\r\n    })\r\n    const { move: { row, col } } = tictactoe.minimax(2)\r\n    return { row, col }\r\n}\r\n","import { useState } from 'react'\nimport { getNextBestMove } from './util';\nimport './App.css';\n\nfunction App() {\n  const [board, setBoard] = useState([[' ', ' ', ' '], [' ', ' ', ' '], [' ', ' ', ' ']])\n  const [winner, setWinner] = useState(null)\n  const [highlight, setHighlight] = useState('')\n\n  const play = (row, col) => {\n    if (board[row][col] === ' ' && winner === null) {\n      const tmpBoard = []\n      for (let i = 0; i < board.length; i++) {\n        tmpBoard.push([...board[i]])\n      }\n      tmpBoard[row][col] = 1\n\n      let winner = getWinner(tmpBoard)\n      if (winner !== null) {\n        setBoard(tmpBoard)\n        setWinner(winner)\n      } else {\n        const nextBestMove = getNextBestMove(tmpBoard)\n        tmpBoard[nextBestMove.row][nextBestMove.col] = 2\n        setBoard(tmpBoard)\n\n        winner = getWinner(tmpBoard)\n        if (winner !== null) {\n          highlightWinningCells(tmpBoard)\n          setWinner(winner)\n        }\n      }\n\n    }\n  }\n\n  const getWinner = (board) => {\n    let rows = [0, 0, 0]\n    let cols = [0, 0, 0]\n    let mainDiag = 0\n    let offDiag = 0\n    let numFilled = 0\n\n    for (let i = 0; i < board.length; i++) {\n      for (let j = 0; j < board[0].length; j++) {\n        if (board[i][j] !== ' ') {\n          numFilled += 1\n          const plusOrMinus = board[i][j] === 1 ? 1 : -1\n          rows[i] += plusOrMinus\n          cols[j] += plusOrMinus\n          if (i === j) mainDiag += plusOrMinus\n          if (i === (2 - j)) offDiag += plusOrMinus\n        }\n      }\n    }\n\n    if (\n      rows.some(val => val === 3) ||\n      cols.some(val => val === 3) ||\n      mainDiag === 3 ||\n      offDiag === 3\n    ) {\n      return 1\n    } else if (\n      rows.some(val => val === -3) ||\n      cols.some(val => val === -3) || \n      mainDiag === -3 ||\n      offDiag === -3\n    ) {\n      return -1\n    } else if (numFilled === 9) {\n      return 0\n    } else {\n      return null\n    }\n\n  }\n\n  const highlightWinningCells = (board) => {\n    console.log(`highlightWinningCells()`)\n    let rows = [0, 0, 0]\n    let cols = [0, 0, 0]\n    let mainDiag = 0\n    let offDiag = 0\n\n    for (let i = 0; i < board.length; i++) {\n      for (let j = 0; j < board[0].length; j++) {\n        if (board[i][j] !== ' ') {\n          const plusOrMinus = board[i][j] === 1 ? 1 : -1\n          rows[i] += plusOrMinus\n          cols[j] += plusOrMinus\n          if (i === j) mainDiag += plusOrMinus\n          if (i === (2 - j)) offDiag += plusOrMinus\n        }\n      }\n    }\n\n    if (rows.some(val => val === -3)) {\n      setHighlight(`row${rows.findIndex(val => val === -3)}`)\n    } else if (cols.some(val => val === -3)) {\n      setHighlight(`col${cols.findIndex(val => val === -3)}`)\n    } else if (mainDiag === -3) {\n      setHighlight(`mainDiag`)\n    } else if (offDiag === -3) {\n      setHighlight(`offDiag`)\n    }\n  }\n\n  const getHighlightStyle = (i, j) => {\n    if (highlight.substring(0, 3) === 'row') {\n      return i === Number(highlight.charAt(3))\n    } else if (highlight.substring(0, 3) === 'col') {\n      return j === Number(highlight.charAt(3))\n    } else if (highlight === 'mainDiag') {\n      return i === j\n    } else if (highlight === 'offDiag') {\n      return i === (2 - j)\n    } else {\n      return false\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Tic Tac Toe</h1>\n      <div className=\"board\">\n        <table>\n          <tbody>\n            {board.map((row, i) => (\n              <tr key={`row${i}`}>\n              {row.map((cell, j) => (\n                <td \n                style={{\n                  backgroundColor: highlight !== '' && getHighlightStyle(i, j) ? 'gray' : null,\n                  color: highlight !== '' && getHighlightStyle(i, j) ? 'white' : null,\n                }}\n                className=\"cell\" key={`col${j}`} onClick={() => {\n                  play(i, j)\n                }}>\n                  {cell === 1 ? 'X' : cell === 2 ? 'O' : ' '}\n                </td>\n              ))}\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n      {winner === 1 && <h2>You win!</h2>}\n      {winner === -1 && <h2>You lose!</h2>}\n      {winner === 0 && <h2>Tie!</h2>}\n      {winner !== null && <button onClick={() => window.location.reload()}>Play again</button>}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}